extends layout.pug

block body

    p Bitmovin Player with basic analytics

    .container
        .content
            .player-wrapper
                #player

block script
    script(type='text/javascript', src='dist/bitmovinplayer-analytics-comscore.js')
    script(type='text/javascript').
      var conf = {
        key: 'YOUR-PLAYER-KEY',
        logs: {
          //level: 'debug'
        },
        advertising: {
        }
      };

      var source = {
        title: 'Art of Motion',
        description: 'What is this event... Parcour?',
        dash: '//bitmovin-a.akamaihd.net/content/MI201109210084_1/mpds/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.mpd',
        hls: '//bitmovin-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8',
        progressive: '//bitmovin-a.akamaihd.net/content/MI201109210084_1/MI201109210084_mpeg-4_hd_high_1080p25_10mbits.mp4',
        poster: '//bitmovin-a.akamaihd.net/content/art-of-motion_drm/art-of-motion_poster.jpg',
      };

      var player = new bitmovin.player.Player(document.getElementById('player'), conf);

      player.load(source).then(function() {
        scheduleAds().then(function() {
          console.log('Ads scheduled successfully');
        }).catch(function(reason) {
          console.error('Error scheduling ads');
          console.error(reason);
        });
        console.log('Successfully Loaded the source');
      }, function(reason) {
        console.error('Error while loading the source');
        console.error(reason);
      });

      var comscore = new bitmovin.player.analytics.ComscoreAnalytics(player, {
        key: 'CUSTOMER_KEY',
        clientId: 'CLIENT_ID',
        debug: true,
        alternativeUri: 'http://localhost:9050/log',
        debugLoggingEnabled: true,
        gatewayUrl: 'https://youraccount-test.testonly.conviva.com', // TOUCHSTONE_SERVICE_URL for testing
        applicationName: 'Bitmovin Player Conviva Analytics Integration Test Page',
        viewerId: 'uniqueViewerId',
      });

      function scheduleAds() {
        return Promise.all([
          player.ads.schedule({
            tag: {
              url: 'https://pubads.g.doubleclick.net/gampad/ads?sz=640x480&iu=/32573358/skippable_ad_unit&impl=s&gdfp_req=1&env=vp&output=xml_vast2&unviewed_position_start=1&url=http%3A%2F%2Freleasetest.dash-player.com%2Fads%2F&description_url=[description_url]&correlator=[random]',
              type: 'ima'
            },
            id: 'ad-pre',
            position: 'pre'
          }),
          player.ads.schedule({
            tag: {
              url: 'https://pubads.g.doubleclick.net/gampad/ads?sz=640x480&iu=/32573358/skippable_ad_unit&impl=s&gdfp_req=1&env=vp&output=xml_vast2&unviewed_position_start=1&url=http%3A%2F%2Freleasetest.dash-player.com%2Fads%2F&description_url=[description_url]&correlator=[random]',
              type: 'ima'
            },
            id: 'ad-mid',
            position: '30%'
          }),
          player.ads.schedule({
            tag: {
              url: 'https://pubads.g.doubleclick.net/gampad/ads?sz=640x480&iu=/32573358/2nd_test_ad_unit&ciu_szs=300x100&impl=s&gdfp_req=1&env=vp&output=vast&unviewed_position_start=1&url=[referrer_url]&description_url=[description_url]&correlator=[random]',
              type: 'ima'
            },
            id: 'ad-post',
            position: 'post'
          })
        ]);
      }
